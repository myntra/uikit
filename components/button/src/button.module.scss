@import '@myntra/uikit-design';

$-button: () !default;
$-button: merge(
  (
    text: (
      font-size: ui-font-size(base),
      text-transform: uppercase,
      white-space: nowrap
    ),
    shape: (
      padding: ui-context-size(s) ui-context-size('2xl')
    ),
    surface: (
      border-radius: 2rem
    )
  ),
  $-button,
  2
);

$-button__states: () !default;
$-button__states: merge(
  (
    disabled: (
      text: (
        color: ui-text-color(dark, disabled)
      ),
      surface: (
        background-color: ui-color(gray, lighter),
        border-color: ui-color(gray, dark)
      )
    ),
    hover: (
      surface: (
        box-shadow: ui-shadow()
      )
    ),
    active: (
      surface: (
        box-shadow: ui-shadow(flat)
      )
    )
  ),
  $-button__states,
  2
);

$-button__variants: () !default;
$-button__variants: merge(
  (
    primary: (
      text: (
        color: ui-text-color(light)
      ),
      surface: (
        background-color: ui-color(primary),
        border: solid 1px ui-color(primary)
      )
    ),
    secondary: (
      text: (
        color: ui-text-color(primary)
      ),
      surface: (
        background-color: transparent,
        border: solid 1px ui-color(primary)
      ),
      hover: (
        surface: (
          background-color: ui-color(primary, lighter)
        )
      )
    ),
    link: (
      text: (
        color: ui-text-color(primary)
      ),
      surface: (
        background-color: transparent,
        border: none
      ),
      shape: (
        padding-left: 0,
        padding-right: 0
      ),
      disabled: (
        text: (
          color: ui-text-color(dark, disabled)
        ),
        surface: (
          background-color: transparent
        )
      ),
      hover: (
        surface: (
          box-shadow: none
        )
      ),
      active: (
        text: (
          color: ui-color(primary, dark)
        )
      )
    )
  ),
  $-button__variants,
  2
);

// Composition: Icon
$-button--icon: () !default;
$-button--icon: merge(
  (
    shape: (
      padding: ui-context-size(s)
    )
  ),
  $-button--icon
);

// Composition: Leading Icon
$-button--primary-icon: () !default;
$-button--primary-icon: merge(
  (
    shape: (
      margin-right: ui-context-size(xs)
    )
  ),
  $-button--primary-icon
);

// Composition: Trailing Icon
$-button--secondary-icon: () !default;
$-button--secondary-icon: merge(
  (
    shape: (
      margin-left: ui-context-size(xs)
    )
  ),
  $-button--secondary-icon
);

.button {
  $states: (focus-visible, hover, active, disabled);

  box-sizing: border-box;
  display: inline-block;
  line-height: 1;
  cursor: pointer;

  // Firefox <35 for Android sets a default background-image gradient on all buttons. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Notes
  background-image: none;
  transition: all 0.15s;

  @include extract($-button);

  // Firefox will add a small dotted border on a focused button. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Firefox
  &::-moz-focus-inner {
    border: 0;
  }

  &:disabled {
    pointer-events: none;
    user-select: none;
  }

  &:focus {
    outline: 1px dashed ui-color(primary, light);
  }

  &:focus-visible {
    outline: 1px dashed ui-color(primary, light);
  }

  &:focus:not(:focus-visible) {
    outline: none;
  }

  @each $state in $states {
    &:#{$state} {
      @if map-has-key($-button__states, $state) {
        @include extract(map-get($-button__states, $state));
      }
    }
  }

  @each $variant, $config in $-button__variants {
    &.#{$variant} {
      @include extract($config);

      @each $state in $states {
        &:#{$state},
        &.#{$state} {
          content: null;

          @if map-has-key($config, $state) {
            @include extract(map-get($config, $state));
          } @else if map-has-key($-button__states, $state) {
            @include extract(map-get($-button__states, $state));
          }
        }
      }
    }
  }

  &.inherit {
    color: currentColor;
  }

  &.has-icon {
    @include extract($-button--icon);

    > .icon {
      width: 1em;
      height: 1em;
    }
  }

  > .primary-icon {
    display: inline-block;

    @include extract($-button--primary-icon);
  }
  > .secondary-icon {
    display: inline-block;

    @include extract($-button--secondary-icon);
  }
}
