@import "@myntra/uikit-design";

$button: () !default;
$button: merge(
  (
    text: (
      font-size: 1rem,
      text-transform: uppercase,
      white-space: nowrap,
    ),
    shape: (
      padding: ui-context-size(x-small) ui-context-size(large),
      margin-left: ui-size(x-small),
      margin-right: ui-size(x-small),
      border-radius: ui-border-radius()
    )
  ),
  $button,
  2
);

$button__states: () !default;
$button__states: merge(
  (
    disabled: (
      text: (
        color: ui-text-color(dark, disabled),
      ),
      surface: (
        background-color: ui-color(gray, lighter),
        border-color: ui-color(gray, darker),
      ),
    ),
    focus-visible: (
      surface: (
        outline: 1px dashed currentColor,
      )
    )
  ),
  $button__states,
  2
);

$button__variants: () !default;
$button__variants: merge(
  (
    primary: (
      text: (
        color: ui-text-color(light),
      ),
      surface: (
        background-color: ui-color(primary),
        border: solid 1px ui-color(primary),
      ),
      hover: (
        surface: (
          background-color: ui-color(primary, dark),
          border-color: ui-color(primary, darkest),
        )
      ),
    ),
    secondary: (
      text: (
        color: ui-text-color(light),
      ),
      surface: (
        background-color: transparent,
        border: solid 1px ui-color(primary),
      ),
      hover: (
        surface: (
          border-color: color(primary, darkest),
        )
      ),
    ),
    link: (
      text: (
        color: ui-text-color(primary),
      ),
      surface: (),
      hover: (),
      active: ()
    )
  ),
  $button__variants,
  2
);

// Composition: Icon
$button--icon: () !default;
$button--icon: merge( 
  (
    shape: (
      padding: ui-context-size(x-small),
    )
  ),
  $button--icon
);

// Composition: Leading Icon
$button--primary-icon: () !default;
$button--primary-icon: merge(
  (
    shape: (
      padding: ui-context-size(x-small),
    )
  ),
  $button--primary-icon
);

// Composition: Trailing Icon
$button--secondary-icon: () !default;
$button--secondary-icon: merge(
  (
    shape: (
      padding: ui-context-size(x-small),
    )
  ),
  $button--secondary-icon
);

.button {
  $states: (focus-visible, hover, active, disabled);

  cursor: pointer;
  display: inline-block;
  transition: all 0.35s;
  box-sizing: border-box;
  
  // Firefox <35 for Android sets a default background-image gradient on all buttons. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Notes
  background-image: none;

  @include extract($-button);

  // Firefox will add a small dotted border on a focused button. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Firefox
  &::-moz-focus-inner {
    border: 0;
  }

  &:focus {
    outline: none;
  }
  
  @each $state in $states {
    &:#{$state} {
      @if map-has-key($-button__states, $state) {
        @include extract(map-get($-button__states, $state));
      }
    }
  }

  @each $variant, $config in $-button__variants {
    &.#{$variant} {
      @include extract($config);

      @each $state in $states {
        &:#{$state} {
          content: null;

          @if map-has-key($config, $state) {
            @include extract(map-get($config, $state));
          } @else if map-has-key($-button__states, $state) {
            @include extract(map-get($-button__states, $state));
          }
        }
      }
    }
  }

  &:disabled {
    pointer-events: none;
    user-select: none;
  }

  &.has-icon {
    @include extract($-button--icon);
  }

  + .button {
    margin-left: 0; // collapse
  }
  
  > .primary-icon {
    @include extract($uxx-button--primary-icon);
  }
  > .secondary-icon {
    @include extract($-button--secondary-icon);
  }
}
