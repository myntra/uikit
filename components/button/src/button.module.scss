@import '@accoutrement';

/* stylelint-disable no-descending-specificity */

.container {
  @include border('button');
  @include border-radius('button');
  @include padding('button');
  @include typography('button');
  @include transition('button');

  + .container {
    @include margin-left('small');
  }

  display: inline-block;
  line-height: 1;
  text-decoration: none;
  cursor: pointer;

  &::-moz-focus-inner {
    border: 0;
  }

  &:focus {
    outline: outline('none');
  }

  &:focus-visible {
    outline: border('keyboard-focus');
  }

  &:disabled {
    cursor: not-allowed;
  }

  &.primary {
    color: contrast-text-color('primary');
    background-color: color('primary');
    border-color: color('primary');

    &:disabled {
      color: contrast-text-color('button.disabled', 'disabled');
      background-color: color('button.disabled');
      border-color: color('button.disabled');
    }

    &:not(:disabled) {
      &:hover {
        background-color: color('primary-light-1');
        border-color: color('primary-light-1');
      }

      &:active:hover {
        background-color: color('primary-dark-2');
        border-color: color('primary-dark-2');
      }
    }
  }

  &.secondary {
    color: text-color('primary');
    background-color: color('white');
    border-color: color('primary');

    &:disabled {
      color: contrast-text-color('gray-light-3', 'disabled');
      background-color: color('gray-light-3');
      border-color: color('button.disabled');
    }

    &:not(:disabled) {
      &:hover {
        background-color: color('primary-light-3');
      }

      &:active,
      &:active:hover {
        background-color: color('primary-light-2');
      }
    }
  }

  &.text {
    @include padding('icon-button');

    color: text-color('primary');
    background-color: transparent;
    border-color: transparent;

    &:disabled {
      color: text-color('primary', 'disabled');
    }

    &:not(:disabled) {
      &:hover {
        color: text-color('primary', 'medium');
      }

      &:active,
      &:active:hover {
        color: text-color('primary');
      }
    }
  }

  &.inherit {
    color: currentColor;

    @include transition('all');

    &:disabled {
      color: currentColor;
    }

    &:not(:disabled) {
      &:hover {
        color: currentColor;
      }

      &:active,
      &:active:hover {
        color: currentColor;
        transform: translateY(2px);
      }
    }
  }

  &.icon {
    @include padding('icon-button');

    box-sizing: content-box;
    width: 1em;
    height: 1em;
    svg {
      transform: scale(1.25);
      transform-origin: center center;
    }
  }

  > .icon {
    // TODO: Remove this hack for aligning icon with text.
    display: inline-block;
    transform: translateY(1px);

    &.leading {
      padding-inline-end: 1ch;
    }

    &.trailing {
      padding-inline-start: 1ch;
    }
  }
}
